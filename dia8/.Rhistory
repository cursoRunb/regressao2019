# fim_coluna <- as.integer(readline(prompt = paste("Jogador", jogador, "Escolha a coluna")))
#
# inicio <- c(inicio_linha, inicio_coluna)
# fim <- c(fim_linha, fim_coluna)
#
aa <- pos_mouse(tabuleiro,jogador)
inicio <- aa[1:2]
fim <- aa[3:4]
valido <- valida(inicio,fim, jogador, tabuleiro)
}
tabuleiro <- movimento(inicio, fim, tabuleiro)
tabuleiro
}
acabou <- function(tabuleiro, jogador){
vencedor <- 0
posicao <- which(tabuleiro == -1)
pos_linha <- ifelse(posicao %% 8 == 0, 8, posicao %% 8)
pos_coluna <- ceiling(posicao/8)
pos <- c(pos_linha,pos_coluna)
if(pos_linha == 8){
ganhou <- !any(c(valida(pos, c(pos[1] - 1, pos[2] - 1), jogador, tabuleiro),
valida(pos, c(pos[1] - 1, pos[2] + 1), jogador, tabuleiro)))
vencedor <- ifelse(ganhou,1,0)
}
if(pos_linha < 8){
ganhou <- !any(c(valida(pos, c(pos[1] - 1, pos[2] - 1), jogador, tabuleiro),
valida(pos, c(pos[1] - 1, pos[2] + 1), jogador, tabuleiro),
valida(pos, c(pos[1] + 1, pos[2] - 1), jogador, tabuleiro),
valida(pos, c(pos[1] + 1, pos[2] + 1), jogador, tabuleiro)))
vencedor <- ifelse(ganhou,1,0)
}
if(any(tabuleiro[1,] == -1)){
vencedor <- -1
}
vencedor
}
jogo <- function(){
tabuleiro <- matrix(data = 0, nrow = 8, ncol = 8)
tabuleiro[1,1] <- 1
tabuleiro[1,3] <- 1
tabuleiro[1,5] <- 1
tabuleiro[1,7] <- 1
tabuleiro[8,4] <- -1
jogador <- -1
contagem <- 1
while(acabou(tabuleiro,jogador) == 0){
plota_pecas(tabuleiro)
tabuleiro <- jogada(jogador,tabuleiro)
plota_pecas(tabuleiro)
print(tabuleiro)
print("___________________________________________________")
jogador <- jogador * (-1)
}
print(paste("Parabéns, Jogador", jogador, "!"))
}
jogo()
source('~/.active-rstudio-document')
numvec<-rep(NA,100000)
maxbiasvec<-rep(NA,100000)
jackbiasvec<-rep(NA,100000)
for (i in 1:100000){
samp<-runif(100, min = 0, max = 5)
jack<-max(samp)+(100-1)/100*(max(samp)-max(samp[!samp==max(samp)]))
numvec[i]<-ifelse(abs(5-jack)<abs(max(samp)-5), 1,0)
maxbiasvec[i]<-abs(5-max(samp))
jackbiasvec[i]<-abs(5-jack)
}
mean(numvec)
mean(jackbiasvec)
mean(maxbiasvec)
require(bootstrap)
x <- rnorm(50)
aa <- jackknife(x,median)
aa
estjack <- 50*median(x)-49*mean(aa$jack.values)
estjack
medianas <- c()
for(i in 1:1000){
x <- rnorm(50)
medianas[i] <- median(x)
}
sd(medianas)
aa$jack.se
medianas <- c()
resultados <- c()
for(i in 1:1000){
x <- rnorm(50)
aa <- jackknife(x,median)
medianas[i] <- median(x)
resultados[i] <- aa$jack.se
}
sd(medianas)
summary(resultados)
for(i in 1:1000){
x <- rnorm(100)
aa <- jackknife(x,median)
medianas[i] <- median(x)
resultados[i] <- aa$jack.se
}
sd(medianas)
summary(resultados)
medianas <- c()
resultados <- c()
for(i in 1:1000){
x <- rnorm(1000)
aa <- jackknife(x,median)
medianas[i] <- median(x)
resultados[i] <- aa$jack.se
}
sd(medianas)
summary(resultados)
x1 <- rpois(50,100)
x1 <- rpois(50,100)
x2 <- rpois(50,500)
y <- 10 + 3 * x1 + .5 * x2 + rnorm(50,0,5)
mod <- lm(y~x1+x2)
summary(mod)
summary(x1)
x1[1] <- 8
modout <- lm(y~x1+x2)
summary(modout)
dados <- data.frame(x1=x1,x2=x2,y=y)
estimab1 <- function(x,dados){
modelo <- lm(modout,data=dados[x,])
modelo$coefficients[2]
}
aa <- jackknife(1:50,estimab1)
aa <- jackknife(1:50,estimab1,dados)
aa
plot(aa$jack.values)
plot(aa$jack.values)
plot(x1,y)
plot(x2,y)
plot(aa$jack.values)
aa
summary(modout)
aa
summary(modout)
plot(x1,y)
abline(lm(y~x1)$coefficients)
abline(lm(y~x1,data=dados[-1,])$coefficients)
plot(aa$jack.values)
medianas <- c()
resultados <- c()
estimador <- c()
for(i in 1:1000){
x <- rnorm(50)
aa <- jackknife(x,median)
medianas[i] <- median(x)
resultados[i] <- aa$jack.se
estimador[i] <- 50*median(x)-49*mean(aa$jack.values)
}
sd(medianas)
hist(medianas)
hist(estimador)
for(i in 1:1000){
x <- rexp(50,1/20)
aa <- jackknife(x,median)
medianas[i] <- median(x)
resultados[i] <- aa$jack.se
estimador[i] <- 50*median(x)-49*mean(aa$jack.values)
}
sd(medianas)
hist(medianas)
hist(estimador)
sd(medianas)
summary(resultados)
x <- rexp(50,1/20)
x
hist(x)
median(x)
cc <- jackknife(x,median)
cc
hist(cc$jack.values)
hist(cc$jack.values)
estimativa <- 50*median(x)-49*mean(cc$jack.values)
estimativa
cc$jack.se
estimativa-qt(.975,49)*cc$jack.se
estimativa+qt(.975,49)*cc$jack.se
hist(x)
(estimativa-10)/cc$jack.se
pt((estimativa-10)/cc$jack.se,49)
1-pt((estimativa-10)/cc$jack.se,49)
2*(1-pt((estimativa-10)/cc$jack.se,49))
qt(.975,49)
(estimativa-10)/cc$jack.se
qt(.95,49)
16*57/85
69*57/85
16*28/85
69*28/85
(7-10.72)^2/10.72+(50-46.27)^2/46.27+(9-5.27)^2/5.27+(19-22.72)^2/22.72
horas <- c(3,5,4,4,2,3)
mean(horas)
notas <- c(86,95,92,83,78,82)
mean(notas)
notas *  horas
sum(notas *  horas)
sum(notas *  horas)/6-3.5*86
sum(notas *  horas)/6-(3.5*86)
sum(notas *  horas)/6
sum(notas *  horas)/6-(3.5*86)
horas^2
sum(horas^2)
sum(horas^2)/6
sum(horas^2)/6 - 3.5^2
var(horas)*5/6
sum(notas^2)/6 - 86^2
4.83/sqrt(.91*34.33)
(206000-276000)/32000
(220000-276000)/32000
(350000-276000)/32000
(250000-276000)/32000
teste <- read.csv("https://raw.githubusercontent.com/gustavopompeu/ENAP/master/Regressao/SIOP.csv")
teste <- read.csv("https://raw.githubusercontent.com/gustavopompeu/ENAP/master/Regressao/SIOP.csv",encoding = "Latin1")
?encodinf
?encodin
?encoding
?read.csv
teste <- read.csv("https://raw.githubusercontent.com/gustavopompeu/ENAP/master/Regressao/SIOP.csv",encoding = "latin1")
head(teste)
plot(dados)
plot(teste)
dim(teste)
names(teste)
plot(teste[,16:20])
mod <- lm(teste$Pago ~ teste$Dotação.Inicial)
summary(mod)
plot(mod)
plot(teste$Dotação.Inicial, teste$Pago)
abline(mod$coefficients)
shapiro.test(mod$residuals)
hist(mod$residuals)
bartlett.test(mod)
?bartlett.test
bartlett.test(teste$Pago~teste$Dotação.Inicial)
install.packages("onewaytests")
require(onewaytests)
teste <- read.csv("https://raw.githubusercontent.com/gustavopompeu/ENAP/master/Regressao/SIOP.csv",encoding = "latin1")
mod <- lm(teste$Pago ~ teste$Dotação.Inicial)
bf.test(teste$Pago~teste$Dotação.Inicial)
bf.test(Pago ~ Dotação.Inicial,data = teste)
install.packages("lmtest")
require(lmtest)
bptest(Pago~Dotação.Inicial,data=teste)
summary(lm)
summary(mod)
mod1 <- lm(mod$residuals~teste$Dotação.Inicial)
sqreg1 <- sum((mod1$fitted.values-mean(teste$Pago))^2)
sqreg1
(sqreg1/2)/mean(mod$residuals^2)^2
mod1 <- lm(I(mod$residuals^2)~teste$Dotação.Inicial)
sqreg1 <- sum((mod1$fitted.values-mean(teste$Pago))^2)
(sqreg1/2)/mean(mod$residuals^2)^2
mod1 <- lm(I(mod$residuals^2)~teste$Dotação.Inicial)
sqreg1 <- sum((mod1$fitted.values-mean(teste$Pago))^2)
(sqreg1/2)/mean(mod$residuals^2)^2
var(mod$residuals^2)*(length(mod$residuals)-1)
sqreg1
sum(mod1$residuals^2)
sqreg1 + sum(mod1$residuals^2)
aov(mod1)
aov(mod1)[1,1]
aa <- aov(mod1)
names(aa)
aa <-summary( aov(mod1))
names(aa)
aa
aa[1,2]
aa[[1]][1,2]
bb <- summary(aov(mod))
bb
bb[[1]][2,2]
bb[[1]][2,2]/nrow(teste)
(aa[[1]][1,2]/2)/(bb[[1]][2,2]/nrow(teste))^2
3*8+20
44*12
floor(59/5)*.5*4
floor((59-40)/5)*.5*4
floor((59-40)/5)*.5*4+2*floor((47-40)/5)*.5*4+floor((46-40)/5)*.5*4+floor((49-40)/5)*.5*4
((59-40)/5)*.5*4+2*((47-40)/5)*.5*4+((46-40)/5)*.5*4+((49-40)/5)*.5*4
6*8
12/8
9*8
72/8
populacao <- rexp(10000,1/50)
hist(populacao)
mean(populacao)
populacao
medias <- c()
for(i in 1:1000){
amostra <- sample(x = populacao, size = 50)
medias[i] <- mean(amostra)
}
hist(medias)
for(i in 1:1000){
amostra <- sample(x = populacao, size = 100)
medias[i] <- mean(amostra)
}
hist(medias)
for(i in 1:1000){
amostra <- sample(x = populacao, size = 500)
medias[i] <- mean(amostra)
}
hist(medias)
summary(medias)
mean(medias)
populacao <- runif(10000,150,180)
hist(populacao)
mean(populacao)
medias <- c()
for(i in 1:1000){
amostra <- sample(x = populacao, size = 500)
medias[i] <- mean(amostra)
}
hist(medias)
summary(medias)
for(i in 1:1000){
amostra <- sample(x = populacao, size = 50)
medias[i] <- mean(amostra)
}
hist(medias)
mean(medias)
mean(populacao)
var(populacao)
var(populacao)/50
var(medias)
for(i in 1:1000){
amostra <- sample(x = populacao, size = 500)
medias[i] <- mean(amostra)
}
hist(medias)
pp <- seq(.001,.999,by=.001)
plot(pp,log(pp/(1-pp)))
valores <- seq(-300,300,by=.1)
plot(valores,exp(valores)/(1+exp(valores)))
valores <- seq(-30,30,by=.1)
plot(valores,exp(valores)/(1+exp(valores)))
valores <- seq(-10,10,by=.1)
plot(valores,exp(valores)/(1+exp(valores)))
pp <- seq(.001,.999,by=.001)
plot(pp,log(pp/(1-pp)))
pp <- seq(.000001,.999999,by=.01)
plot(pp,log(pp/(1-pp)))
pp <- seq(.000001,.999999,by=.00001)
plot(pp,log(pp/(1-pp)))
log(3)
(log(3)+9.346)/.014634
pp <- seq(.000001,.999999,by=.00001)
plot(pp,log(pp/(1-pp)))
valores <- seq(-10,10,by=.1)
plot(valores,exp(valores)/(1+exp(valores)))
??diabete
data(diabetes)
install.packages("dprep")
setwd("~/Dropbox/AAAUNB/Extensao/ENAP/2019/Regressao/preparacao")
dados <- read.csv("pima-indians-diabetes.csv")
head(dados)
dim(dados)
summary(dados$X50)
names(dados)
summary(dados$X1)
summary(as.factor(dados$X1))
titanic
data("Titanic")
Titanic
?Titanic
install.packages("ROCR")
require(ROCR)
?performance
head(dados)
modelo <- glm(X1~.,family = "binomial")
modelo <- glm(X1~.,family = "binomial",data = dados)
summary(modelo)
selecao <- step(modelo,scope = list(lower=~1),direction = "backward")
summary(selecao)
result <- predict(modelo,dados,type = "response")
rocpred <- prediction(result,dados$X1)
rocpred
rocperf <- performance(rocpred,"tpr","fpr")
plot(rocperf)
methods(plot)
?plot.performance
plot(rocperf,print.cutoffs.at=seq(.1,.9,by=.05))
x1 <- rpois(50,170)
y <- rbinom(50,1,exp(50+5*X1)/(1+exp(50+5*X1)))
x1 <- rpois(50,170)
y <- rbinom(50,1,exp(50+5*X1)/(1+exp(50+5*X1)))
y <- rbinom(50,1,exp(50+5*x1)/(1+exp(50+5*x1)))
exp(50+5*x1)
y <- rbinom(50,1,exp(5+5*x1)/(1+exp(50+5*x1)))
exp(5+5*x1)
?exp
y <- rbinom(50,1,exp(5+.5*x1)/(1+exp(5+.5*x1)))
teste <- glm(y~x1,family = "binomial")
summary(teste)
y
y <- rbinom(50,1,exp(5+.5*x1)/(1+exp(5+.5*x1)))
exp(5+.5*x1)/(1+exp(5+.5*x1)))
exp(5+.5*x1)/(1+exp(5+.5*x1))
exp(5+.5*x1)/(1+exp(5+.5*x1))
x1
valores <- seq(-10,10,by=.1)
plot(valores,exp(valores)/(1+exp(valores)))
x1 <- rpois(50,170)/100
y <- rbinom(50,1,exp(.5+.5*x1)/(1+exp(.5+.5*x1)))
teste <- glm(y~x1,family = "binomial")
summary(teste)
x1 <- rpois(50,170)/100
y <- rbinom(50,1,exp(.5+.5*x1)/(1+exp(.5+.5*x1)))
teste <- glm(y~x1,family = "binomial")
summary(teste)
exp(.5+.5*x1)/(1+exp(.5+.5*x1))
x1 <- rpois(50,1700)/1000
y <- rbinom(50,1,exp(.5+.5*x1)/(1+exp(.5+.5*x1)))
teste <- glm(y~x1,family = "binomial")
summary(teste)
exp(.5+.5*x1)/(1+exp(.5+.5*x1))
y <- rbinom(50,1,exp(-.5+.5*x1)/(1+exp(-.5+.5*x1)))
x1 <- rpois(50,1700)/1000
y <- rbinom(50,1,exp(-.5+.5*x1)/(1+exp(-.5+.5*x1)))
teste <- glm(y~x1,family = "binomial")
summary(teste)
exp(-.5+.5*x1)/(1+exp(-.5+.5*x1))
x1 <- rpois(50,1700)/1000
x1
x1 <- rnorm(500)
media <- 3 + .5 x1
media <- 3 + .5 * x1
prob <- 1/(1+exp(-media))
y <- rbinom(500,1,prob)
teste <- glm(y~x1,family = "binomial")
summary(teste)
x2 <- rpois(500,1700)/1700
x1 <- rnorm(500)
x2 <- rpois(500,1700)/1700
media <- 3 + .5 * x1 + 5 *x2
prob <- 1/(1+exp(-media))
y <- rbinom(500,1,prob)
teste <- glm(y~x1+x2,family = "binomial")
x2 <- rpois(500,170)/170
media <- 3 + .5 * x1 + 5 *x2
prob <- 1/(1+exp(-media))
y <- rbinom(500,1,prob)
teste <- glm(y~x1+x2,family = "binomial")
summary(teste)
x2 <- rnorm(500)
media <- 3 + .5 * x1 + 5 *x2
prob <- 1/(1+exp(-media))
y <- rbinom(500,1,prob)
teste <- glm(y~x1+x2,family = "binomial")
summary(teste)
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("pima-indians-diabetes.csv")
names(dados <- c(number_preg,plasma_gluc,diastolic_pressure,skin_thick,insulin,bmc,diabet_pedigree_func,age,diagno))
names(dados <- c("number_preg","plasma_gluc","diastolic_pressure","skin_thick","insulin","bmc","diabet_pedigree_func","age","diagno"))
names(dados) <- c("number_preg","plasma_gluc","diastolic_pressure","skin_thick","insulin","bmc","diabet_pedigree_func","age","diagno")
head(dados)
dados <- read.csv("pima-indians-diabetes.csv")
names(dados) <- c("number_preg","plasma_gluc","diastolic_pressure","skin_thick","insulin","bmc","diabet_pedigree_func","age","diagno")
head(dados)
dim(dados)
767*.8
indices <- sample(1:nrow(dados),size = floor(nrow(dados)*.8))
names(dados)
modelo <- glm(diagno~.,data = treino)
treino <- dados[indices,]
teste <- dados[-indices,]
modelo <- glm(diagno~.,data = treino,family = "binomial")
summary(modelo)
selecao <- step(modelo,scope = list(lower=~1,upper=~.))
summary(selecao)
table(selecao$fitted.values>.5,treino$diagno==1)
table(selecao$fitted.values>.5,treino$diagno)
(tabela <- table(selecao$fitted.values>.5,treino$diagno))
diag(tabela)
sum(diag(tabela))/sum(tabela)
require(ROCR)
result <- predict(selecao,treino,type = "response")
rocpred <- prediction(result,treino$diagno)
rocpred
rocperf <- performance(rocpred,"tpr","fpr")
plot(rocperf,print.cutoffs.at=seq(.1,.9,by=.05))
plot(rocperf,print.cutoffs.at=seq(.1,.9,by=.05))
(tabela35 <- table(selecao$fitted.values>.5,treino$diagno))
sum(diag(tabela35))/sum(tabela35)
(tabela35 <- table(selecao$fitted.values>.5,treino$diagno))
(tabela35 <- table(selecao$fitted.values>.35,treino$diagno))
sum(diag(tabela35))/sum(tabela35)
sum(diag(tabela))/sum(tabela)
(tabela35 <- table(selecao$fitted.values>.3,treino$diagno))
sum(diag(tabela35))/sum(tabela35)
sum(diag(tabela))/sum(tabela)
(tabela35 <- table(selecao$fitted.values>.3,treino$diagno))
sum(diag(tabela3))/sum(tabela3)
(tabela3 <- table(selecao$fitted.values>.3,treino$diagno))
sum(diag(tabela3))/sum(tabela3)
predito <- predict(selecao,teste,type="response")
table(predito>.3,teste$diagno)
setwd("~/Dropbox/AAAUNB/Extensao/ENAP/2019/Regressao/materiais/dia8")
titan <- read.csv("titanic.csv")
head(titan)
dim(titan)
891*.8
indices <- sample(1:891,712)
write.csv(titan[indices,],"Titanic1.csv")
write.csv(titan[-indices,],"Teste.csv")
read.csv("Titanic1.csv")
read.csv("Teste.csv")
dim(read.csv("Teste.csv"))
dim(read.csv("Titanic1.csv"))
